server.port=8086

spring.shardingsphere.datasource.names=ds0,ds1

# 数据源 主库
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://10.2.2.168:3306/test_zp?characterEncoding=utf-8
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root@dev

spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://10.2.2.168:3306/test_zp1?characterEncoding=utf-8
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root@dev


##根据年龄分库
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=business_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{business_id % 2}

#数据分表规则
#指定所需分的表
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order_$->{0..7}
#指定主键
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=id
#分表规则为主键除以3取模
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{Math.abs(id.hashCode()) % 8}

# 使用SNOWFLAKE算法生成主键
spring.shardingsphere.sharding.tables.t_order.key-generator.column = id
spring.shardingsphere.sharding.tables.t_order.key-generator.type = SNOWFLAKE

# 最大容忍的时钟回拨毫秒数（默认为0）
spring.shardingsphere.sharding.tables.t_order.key-generator.max.tolerate.time.difference.milliseconds=5

#打印sql
spring.shardingsphere.props.sql.show=true
